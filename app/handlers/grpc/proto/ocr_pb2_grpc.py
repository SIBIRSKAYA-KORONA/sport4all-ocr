# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.handlers.grpc.proto import ocr_pb2 as handlers_dot_grpc_dot_proto_dot_ocr__pb2


class OcrServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatsByImage = channel.unary_unary(
            '/proto.OcrService/GetStatsByImage',
            request_serializer=handlers_dot_grpc_dot_proto_dot_ocr__pb2.Image.SerializeToString,
            response_deserializer=handlers_dot_grpc_dot_proto_dot_ocr__pb2.PlayerStats.FromString,
        )


class OcrServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStatsByImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OcrServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetStatsByImage': grpc.unary_unary_rpc_method_handler(
            servicer.GetStatsByImage,
            request_deserializer=handlers_dot_grpc_dot_proto_dot_ocr__pb2.Image.FromString,
            response_serializer=handlers_dot_grpc_dot_proto_dot_ocr__pb2.PlayerStats.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'proto.OcrService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class OcrService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStatsByImage(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.OcrService/GetStatsByImage',
                                             handlers_dot_grpc_dot_proto_dot_ocr__pb2.Image.SerializeToString,
                                             handlers_dot_grpc_dot_proto_dot_ocr__pb2.PlayerStats.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
